# USAGE:
#   m4_shim \
#     "+8" "_mrconfig-VENDOR_NAME.EVAL" \
#     "_mrconfig-${DXY_VENDOR_NAME}"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash
# DXY_HEADER_AUTHOR
# DXY_HEADER_DOTFILES

# *** NOTE: THIS MRCONFIG ONLY RUNS ON THE CLIENT MACHINE / CLIENT-ONLY ***

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
order = 220

# ========================================================================
# ------------------------------------------------------------------------

# Project stub, for infusing.
[${VENDOR_HOME:-DXY_VENDOR_HOME__HOME_}]
checkout = true
infuse =
  # The DXC project infuse task (~/.depoxy/running/_mrconfig) wires a lot
  # of DXC home files (see also DepoXy's infuser that places a lot of other
  # home files), but this conf is @biz-specific, and the DXC project config
  # is not PRIVATE-scoped, so we're wiring from here.
  cd && symlink_overlay_file "work/.mrinfuse/.acme.conf" && cd -

# ========================================================================
# ------------------------------------------------------------------------

# "Your ACME-specific OMR config and Homefries bashrc"
# E.g., ~/.depoxy/stints/2324/flast.sh
[${DEPOXYDIR_STINTS_FULL:-DXY_DEPOXYDIR_STINTS__HOME_}/DEPOXY_CLIENT_ID/DXY_VENDOR_DOTFILES_NAME]
lib = remote_set origin git@DXY_VENDOR_GITCONFIG_HUB_HOST:DXY_VENDOR_GITSERVER_USER_NAME/DXY_VENDOR_DOTFILES_NAME.git
autocommit =
  # Prepare args, e.g., `autocommit -y`, or `autocommit -f`.
  git_auto_commit_parse_args "$@"
  #
  # ***
  #
  git_insist_pristine () {
    ! test -n "$(git status --porcelain)" \
      && return 0
    #
    error "ERROR: Not tidy! You should not touch ${MR_REPO}, that's ours!"
    #
    exit 1
  }
  git_insist_pristine
  #
  # ***
  #
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"
  #
  # Copy, e.g.,
  #   ~/.depoxy/stints/XXXX/home/.depoxy/stints/running/flast.sh/README.md
  #   to ~/.depoxy/stints/XXXX/flast.sh/README.md (so you keep a copy of
  #   the README under DXC; that and other files are copied to flast.sh).
  command cp -- "../home/.depoxy/stints/running/DXY_VENDOR_DOTFILES_NAME/README.md" "README.md"
  #
  # Incl. vendor project configs.
  command cp -- "../_mrconfig-DXY_VENDOR_NAME"* "."
  #
  mkdir -p -- "home"
  command cp -- "../home/.gitconfig.user-business" "home/"
  command cp -- "../home/bashrx.private.DXY_USERNAME.sh" "home/"
  #
  # Here's a slick tar way to copy, because copy isn't idempotent,
  # e.g.,
  #   command cp -a -- ../home/work home/
  # will create home/work the first time it's run.
  # But the next time you run it, it'll fail and complain about symlinks:
  #   cp: symlink: the/symlink/target: File exists
  # - As an added bonus, tar can exclude files we don't wanna share,
  #   which saves us a `command rm` later.
  mkdir -p -- "home/work"
  tar -C "../home/work" --exclude "acme.sh/" --exclude ".acme.conf" -cf - . \
    | tar -C "home/work" -xf -
  # So that I at least have a ref. in my IDE project listing.
  ln -sfn -- "../../../home/work/.acme.conf" "home/work/.acme.conf"
  # Because directory, use -h option, so you don't follow target symlink
  # and clobber the real acme.sh/acme.sh file.
  # AUDIT/2023-02-23: This is ln -sfn @linux: Is there universal option?
  ln -sfn -- "../../../home/work/acme.sh" "home/work/acme.sh"
  #
  # ***
  #
  if [ -z "$(git status --porcelain)" ]; then
    info "No-op: ${MR_REPO} unchanged"
  else
    git add .
    git commit -m "Update: Auto-commit changes."
    info "Updated @biz-shareable DXC shadow"
    # LATER/2023-01-06: Also push. For now, tell user.
    warn "- üêª Only YOU üëâ can üö´ git-push üî• this remote üå≤"
  fi

# ========================================================================
# ------------------------------------------------------------------------

# YOU: If you work on different teams with different sets of projects,
#      you might want to break out your config into multiple files, as
#      shown here.

[DEFAULT]
include =
  #
  dxc_root="${DEPOXYDIR_RUNNING_FULL:-${HOME}/.depoxy/running}"
  #
  # CXREF:
  #   DXY_VENDOR_HOME_TILDE/_mrconfig-DXY_VENDOR_NAME--DXY_VENDOR_ORG01_NAME
  cat "${dxc_root}/_mrconfig-DXY_VENDOR_NAME--DXY_VENDOR_ORG01_NAME"
  #
  # CXREF:
  #   DXY_VENDOR_HOME_TILDE/_mrconfig-DXY_VENDOR_NAME--DXY_VENDOR_ORG02_NAME
  cat "${dxc_root}/_mrconfig-DXY_VENDOR_NAME--DXY_VENDOR_ORG02_NAME"

# ========================================================================
# ------------------------------------------------------------------------

