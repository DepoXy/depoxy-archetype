# USAGE:
#   m4_shim \
#     "+8" ".mrconfigs/_mrconfig-VENDOR_NAME.EVAL" \
#     ".mrconfigs/_mrconfig-${DXY_VENDOR_NAME}"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash
# DXY_HEADER_AUTHOR
# DXY_HEADER_DOTFILES

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
order = 220

# ========================================================================
# ------------------------------------------------------------------------

# Project stub, for infusing.
[${VENDOR_HOME:-DXY_VENDOR_HOME__HOME_}]
checkout = true
infuse =
  # The DXC project infuse task (~/.depoxy/running/.mrconfigs/_mrconfig)
  # wires a lot of DXC home files (see also DepoXy's infuser that places
  # a lot of other home files), but this conf is @biz-specific, and the
  # DXC project config is not PRIVATE-scoped, so we're wiring from here.
  cd && symlink_overlay_file "DXY_VENDOR_HOME_NAME/.mrinfuse/DXY_VENDOR_ACMESH_CONF" && cd -

# ========================================================================
# ------------------------------------------------------------------------

# "Your DXY_VENDOR_NAME_PROPER-specific OMR config and Homefries bashrc"
[${DEPOXYDIR_STINTS_FULL:-DXY_DEPOXYDIR_STINTS__HOME_}/DXY_DEPOXY_CLIENT_ID/DXY_VENDOR_DOTFILES_NAME]
lib = remote_set origin git@DXY_VENDOR_GITCONFIG_HUB_HOST:DXY_VENDOR_GITSERVER_USER_NAME/DXY_VENDOR_DOTFILES_NAME.git
infuseProjlns = OMR_INFUSE_PROJLNS_TOGGLE_OFF=true infuse_projlns_if_personal_project
autocommit =
  # Prepare args, e.g., `autocommit -y`, or `autocommit -f`.
  git_auto_commit_parse_args "$@"
  #
  # ***
  #
  git_insist_pristine () {
    ! test -n "$(git status --porcelain)" \
      && return 0
    #
    error "ERROR: Not tidy! You should not touch ${MR_REPO}, that's ours!"
    #
    exit 1
  }
  git_insist_pristine
  #
  # ***
  #
  local ambers_path="${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/ambers"
  #
  # Copy, e.g.,
  #   ~/.depoxy/stints/XXXX/home/.depoxy/stints/running/flast.sh/README.md
  #   to ~/.depoxy/stints/XXXX/flast.sh/README.md (so you keep a copy of
  #   the README under DXC; that and other files are copied to flast.sh).
  command cp -- \
    "../home/.depoxy/stints/running/DXY_VENDOR_DOTFILES_NAME/README.md" \
    "README.md"
  #
  # Incl. vendor project configs.
  command cp -- "../.mrconfigs/_mrconfig-DXY_VENDOR_NAME"* "."
  #
  mkdir -p -- "home"
  command cp -- "../home/bashrc.DXY_VENDOR_NAME.sh" "home/"
  # MAYBE/2024-05-20 01:39:
  #  command cp -- "../home/bashrx.private.DXY_HOSTNAME.sh" "home/"
  command cp -- "../home/.gitconfig.user-business" "home/"
  #
  # Here's a slick tar way to copy, because copy isn't idempotent,
  # e.g.,
  #   command cp -a -- ../home/DXY_VENDOR_HOME_NAME home/
  # will create home/DXY_VENDOR_HOME_NAME the first time it's run.
  # But the next time you run it, it'll fail and complain about symlinks:
  #   cp: symlink: the/symlink/target: File exists
  # - As an added bonus, tar can exclude files we don't wanna share,
  #   which saves us a `command rm` later.
  mkdir -p -- "home/DXY_VENDOR_HOME_NAME"
  tar -C "../home/DXY_VENDOR_HOME_NAME" \
    --exclude "DXY_VENDOR_ACMESH_NAME/" \
    --exclude "DXY_VENDOR_ACMESH_CONF" \
    -cf - . \
    | tar -C "home/DXY_VENDOR_HOME_NAME" -xf -
  # So that I at least have a ref. in my IDE project listing.
  ln -sfn -- \
    "../../../home/DXY_VENDOR_HOME_NAME/DXY_VENDOR_ACMESH_CONF" \
    "home/DXY_VENDOR_HOME_NAME/DXY_VENDOR_ACMESH_CONF"
  # Because directory, use -h option, so you don't follow target symlink
  # and clobber the real DXY_VENDOR_ACMESH_NAME/DXY_VENDOR_ACMESH_NAME file.
  ln -sfn -- "../DXY_VENDOR_ACMESH_NAME" "DXY_VENDOR_ACMESH_NAME"
  #
  # ***
  #
  if [ -z "$(git status --porcelain)" ]; then
    debug "$(fg_mintgreen)$(attr_emphasis)nuttin changed$(attr_reset)" \
      "$(fg_lightorange)${MR_REPO}$(attr_reset)"
  else
    git add .
    git commit -m "Update: Auto-commit changes."
    info "Updated @biz-shareable DXC shadow"
    # LATER/2023-01-06: Also push. For now, tell user.
    warn "- üêª Only YOU üëâ can üö´ git-push üî• this remote üå≤"
  fi

# ========================================================================
# ------------------------------------------------------------------------

[${DEPOXYDIR_STINTS_FULL:-DXY_DEPOXYDIR_STINTS__HOME_}/DXY_DEPOXY_CLIENT_ID/DXY_VENDOR_ACMESH_NAME]
lib = remote_set origin git@DXY_VENDOR_GITCONFIG_HUB_HOST:DXY_VENDOR_GITSERVER_USER_NAME/DXY_VENDOR_ACMESH_NAME.git
infuseProjlns = OMR_INFUSE_PROJLNS_TOGGLE_OFF=true infuse_projlns_if_personal_project
autocommit =
  # Prepare args, e.g., `autocommit -y`, or `autocommit -f`.
  git_auto_commit_parse_args "$@"
  #
  # User should commit "DXY_VENDOR_ACMESH_NAME" changes with useful messages,
  # or if you don't care, add its auto-commit here.
  #   git_auto_commit_one "DXY_VENDOR_ACMESH_NAME" -m "Update: DXY_VENDOR_ACMESH_NAME"
  git_auto_commit_one ".ignore" -m "Update: .ignore"
  git_auto_commit_one "README.md" -m "Update: README.md"

# ========================================================================
# ------------------------------------------------------------------------

# YOU: If you work on different teams with different sets of projects,
#      you might want to break out your config into multiple files, as
#      shown here.

[DEFAULT]
include =
  #
  dxc_root="${DEPOXYDIR_RUNNING_FULL:-${HOME}/.depoxy/running}"
  #
  # CXREF:
  #   DXY_DEPOXYDIR_STINTS_TILDE/DXY_DEPOXY_CLIENT_ID/.mrconfigs/_mrconfig-DXY_VENDOR_NAME--DXY_VENDOR_ORG01_NAME
  mr_cat "${dxc_root}/.mrconfigs/_mrconfig-DXY_VENDOR_NAME--DXY_VENDOR_ORG01_NAME"
  #
  # CXREF:
  #   DXY_DEPOXYDIR_STINTS_TILDE/DXY_DEPOXY_CLIENT_ID/.mrconfigs/_mrconfig-DXY_VENDOR_NAME--DXY_VENDOR_ORG02_NAME
  mr_cat "${dxc_root}/.mrconfigs/_mrconfig-DXY_VENDOR_NAME--DXY_VENDOR_ORG02_NAME"

# ========================================================================
# ------------------------------------------------------------------------

