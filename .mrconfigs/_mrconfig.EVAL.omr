# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash

# USAGE:
#   m4_shim \
#     "+15" ".mrconfigs/_mrconfig.EVAL.omr" \
#     ".mrconfigs/_mrconfig"

# KEEP FRESH:
#   meld ~/.depoxy/ambers/archetype/.mrconfigs/_mrconfig.EVAL.omr ~/.depoxy/running/.mrconfigs/_mrconfig &
# Or swap directions:
#   meld ~/.depoxy/running/.mrconfigs/_mrconfig ~/.depoxy/ambers/archetype/.mrconfigs/_mrconfig.EVAL.omr &

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=bash
# DXY_HEADER_AUTHOR
# DXY_HEADER_PROJECT
# DXY_HEADER_LICENSE

# ****************************************************************************************

# *** NOTE: THIS MRCONFIG ONLY RUNS ON THE CLIENT MACHINE / CLIENT-ONLY ***

[DEFAULT]
__USYNC__ =
  meld \
    DXY_DEPOXYARCHETYPE_DIR_TILDE/.mrconfigs/_mrconfig.EVAL.omr \
    DXY_DEPOXYDIR_RUNNING_TILDE/.mrconfigs/_mrconfig &

# ========================================================================
# ------------------------------------------------------------------------

[DEFAULT]
order = 133

# ========================================================================
# ------------------------------------------------------------------------

[${DEPOXYDIR_STINTS_FULL:-DXY_DEPOXYDIR_STINTS__HOME_}/DXY_DEPOXY_CLIENT_ID]
order = 129
# The client remote has no remote unless you add one for it.
# - See the private remotes config for where to set the remote:
#     DXY_DEPOXYDIR_STINTS_TILDE/DXY_DEPOXY_CLIENT_ID/.mrconfigs/_mrconfig-remotes
checkout = [ -z "${MR_REPO_REMOTES}" ] || mr_repo_checkout
#
fetch = true
pull = true
push = true
update = true
skip = mr_exclusive "client"
infuseProjlns = OMR_INFUSE_PROJLNS_ROOT=true infuse_projlns_if_personal_project

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

autocommit =
  # Rather than run it, source it, which exposes some functions
  # you could use if you add any autocommits for your own files:
  #   git_auto_commit_one_docs
  #   git_auto_commit_one_omr
  #   git_auto_commit_one_update
  # CXREF: ~/.depoxy/ambers/mrassets/client-autocommit
  . "${DEPOXYAMBERS_DIR:-DXY_DEPOXYAMBERS_DIR__HOME_}/mrassets/client-autocommit"
  _dxc_client_autocommit "$@"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Called via ~/.depoxy/ambers/mrassets/client-autocommit
spells =
  git_auto_commit_parse_args "$@"
  # Load: git_auto_commit_one_* fcns.
  . "${DEPOXYAMBERS_DIR:-DXY_DEPOXYAMBERS_DIR__HOME_}/mrassets/client-autocommit"
  # CXREF: ~/.depoxy/ambers/home/.kit/git/ohmyrepos/lib/spellfile.txt-runner.sh
  #   ~/.kit/txt/spellfile.txt/bin/spells.sh
  commit_sorted_spells_and_alert_if_conflicts
  git_auto_commit_one_update "home/.vim/spell/en.utf-8.add--personal" \
     "" "${PRIVATE_ACI}"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# CXREF: See GIT_POST_REBASE_EXEC usage.
# - Used post-rebase to remake hard links.
# SAVYY: Call link_hard from infusePostRebase, not infuse.
infusePostRebase =
  #
  # *** DepoXy filespace
  #
  # Remember that Git doesn't allow symlinked .gitignore .nomore.
  link_hard "${MR_REPO}/home/.depoxy/_gitignore" \
    "${DEPOXYDIR_BASE_FULL:-${HOME}/.depoxy}/.gitignore"
  #
  # *** ~/.kube
  #
  # NOTE: If you create a new kubeconfig, copy to DXC manually, then infuse,
  #       then aci, it'll get picked up.
  for kubeconfig in "${MR_REPO}/home/.kube/"*.yaml; do
    # If nothing globbed, ${kubeconfig} is the glob string.
    if [ -f "${kubeconfig}" ]; then
      mkdir -p "${HOME}/.kube"
      #
      link_hard \
        "${kubeconfig}" \
        "${HOME}/.kube/$(basename -- "${kubeconfig}")"
    fi
  done

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

infuse =
  # CXREF: ~/.depoxy/ambers/mrassets/client-infuse
  . "${DEPOXYAMBERS_DIR:-DXY_DEPOXYAMBERS_DIR__HOME_}/mrassets/client-infuse"
  _dxc_client_infuse

# ========================================================================
# ------------------------------------------------------------------------

# YOU: Add client-specific projects to the another config:
#        ~/.depoxy/running/.mrconfigs/_mrconfig-DXY_DEPOXY_VENDOR_NAME
#      and add personal project to this config:
#        ~/.depoxy/running/.mrconfigs/_mrconfig-DXY_DEPOXY_USERNAME
#      Then this config serves mostly as infrastructure, and it'll
#      diff more simply against the Archetype template.

[DEFAULT]
order = 220
include =
  local ambers_path="${DEPOXYAMBERS_DIR:-${HOME}/.depoxy/ambers}"
  local stints_dir="${DEPOXYDIR_STINTS_FULL:-${HOME}/.depoxy/stints}"
  local client_dir="${stints_dir}/${DEPOXY_CLIENT_ID}"
  #
  # Load task helpers (that higher-level OMR config doesn't load, because
  # neither DepoXy Ambers nor Oh My Repos! uses this functionality).
  #
  # ***
  #
  include_git_hooks_rewire () {
    cat "${OHMYREPOS_LIB:-${HOME}/.kit/git/ohmyrepos/lib}/git-hooks-rewire"
  }
  include_git_hooks_rewire
  #
  # ***
  #
  # Load lib fcn `hack_patch_opn_to_call_sensible_open`.
  include_js_npm_patch_opn_sensible_open () {
    # CXREF: ~/.depoxy/ambers/home/.kit/git/ohmyrepos/lib/js-npm-patch-opn-sensible-open
    cat "${ambers_path}/home/.kit/git/ohmyrepos/lib/js-npm-patch-opn-sensible-open"
  }
  include_js_npm_patch_opn_sensible_open
  #
  # ***
  #
  # Load vendor-specific OMR project config.
  include_depoxy_client_mr_business () {
    . ${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}/skip-grouping.sh
    #
    # CXREF: ~/.depoxy/running/.mrconfigs/_mrconfig-${DEPOXY_VENDOR_NAME:-acme}
    #        ~/.depoxy/ambers/archetype/.mrconfigs/_mrconfig-VENDOR_NAME.EVAL
    local mr_business="${client_dir}/.mrconfigs/_mrconfig-${DEPOXY_VENDOR_NAME:-acme}"
    if [ -f "${mr_business}" ] && ! (
        mr_exclusive "business" "vendor" "${DEPOXY_VENDOR_HOME_NAME:-work}" &&
        true
      );
    then
      mr_cat "${mr_business}"
    fi
  }
  include_depoxy_client_mr_business
  #
  # ***
  #
  # Load user-specific OMR project config.
  include_depoxy_client_mr_personal () {
    . ${OHMYREPOS_LIB:-${GITREPOSPATH:-${HOME}/.kit/git}/ohmyrepos/lib}/skip-grouping.sh
    #
    # CXREF: ~/.depoxy/running/.mrconfigs/_mrconfig-${DEPOXY_USERNAME:-${LOGNAME}}
    #        ~/.depoxy/ambers/archetype/.mrconfigs/_mrconfig-USERNAME.EVAL
    local mr_personal="${client_dir}/.mrconfigs/_mrconfig-${DEPOXY_USERNAME}"
    if [ -f "${mr_personal}" ] && ! (
        mr_exclusive "personal" "user" "${DEPOXY_USERNAME}" &&
        true
      );
    then
      mr_cat "${mr_personal}"
    fi
  }
  include_depoxy_client_mr_personal
  #
  # ***
  #
  # SAVVY: Include this last so that its projects override previous config.
  if echo "${MR_ACTION}" | grep -q "Remotes$"; then
    # CXREF: ~/.depoxy/running/.mrconfigs/_mrconfig-remotes
    mr_cat "${client_dir}/.mrconfigs/_mrconfig-remotes"
  fi

# ========================================================================
# ------------------------------------------------------------------------

